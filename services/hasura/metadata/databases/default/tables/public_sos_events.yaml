table:
  name: sos_events
  schema: public

select_permissions:
  # Mothers can see only their own SOS events
  - role: mother
    permission:
      columns:
        - id
        - user_id
        - emergency_type
        - status
        - location
        - location_address
        - location_description
        - responding_facility_id
        - ambulance_dispatched
        - assigned_ambulance_id
        - description
        - created_at
        - updated_at
      filter:
        user_id: X-Hasura-User-Id
  
  # CHWs can see SOS events for their assigned mothers
  - role: chw
    permission:
      columns:
        - id
        - user_id
        - emergency_type
        - status
        - location
        - location_address
        - location_description
        - responding_facility_id
        - ambulance_dispatched
        - assigned_ambulance_id
        - description
        - created_at
        - updated_at
      filter:
        user:
          chw_id: X-Hasura-User-Id
  
  # Clinicians can see SOS events assigned to their facility
  - role: clinician
    permission:
      columns:
        - id
        - user_id
        - emergency_type
        - status
        - location
        - location_address
        - location_description
        - responding_facility_id
        - ambulance_dispatched
        - assigned_ambulance_id
        - description
        - responding_user_id
        - created_at
        - updated_at
      filter:
        _or:
          - responding_facility_id: X-Hasura-Facility-Id
          - user:
              facility_id: X-Hasura-Facility-Id
  
  # Admins can see all SOS events
  - role: admin
    permission:
      columns:
        - id
        - user_id
        - emergency_type
        - status
        - location
        - location_address
        - location_description
        - responding_facility_id
        - ambulance_dispatched
        - assigned_ambulance_id
        - description
        - responding_user_id
        - created_at
        - updated_at
      filter: {}

insert_permissions:
  # Mothers can create SOS events for themselves
  - role: mother
    permission:
      columns:
        - user_id
        - emergency_type
        - location
        - location_address
        - location_description
        - description
      check:
        user_id: X-Hasura-User-Id
  
  # CHWs can create SOS events for their mothers
  - role: chw
    permission:
      columns:
        - user_id
        - emergency_type
        - location
        - location_address
        - location_description
        - description
      check:
        user:
          chw_id: X-Hasura-User-Id
  
  # Clinicians can create SOS events for facility patients
  - role: clinician
    permission:
      columns:
        - user_id
        - emergency_type
        - status
        - location
        - location_address
        - location_description
        - responding_facility_id
        - description
        - responding_user_id
      check:
        _or:
          - responding_facility_id: X-Hasura-Facility-Id
          - responding_user_id: X-Hasura-User-Id
          - user:
              facility_id: X-Hasura-Facility-Id
              
  # Admins can create any SOS event
  - role: admin
    permission:
      columns:
        - user_id
        - emergency_type
        - status
        - location
        - location_address
        - location_description
        - responding_facility_id
        - ambulance_dispatched
        - assigned_ambulance_id
        - description
        - responding_user_id
      check: {}

update_permissions:
  # Mothers can only update description of their own SOS events
  - role: mother
    permission:
      columns:
        - description
        - location_description
      filter:
        user_id: X-Hasura-User-Id
      check: {}
  
  # CHWs can update SOS events for their mothers
  - role: chw
    permission:
      columns:
        - description
        - location_description
        - status
      filter:
        user:
          chw_id: X-Hasura-User-Id
      check: {}
  
  # Clinicians can update SOS events assigned to their facility
  - role: clinician
    permission:
      columns:
        - status
        - responding_facility_id
        - ambulance_dispatched
        - assigned_ambulance_id
        - description
        - responding_user_id
      filter:
        _or:
          - responding_facility_id: X-Hasura-Facility-Id
          - user:
              facility_id: X-Hasura-Facility-Id
      check:
        _or:
          - responding_facility_id: X-Hasura-Facility-Id
          - responding_user_id: X-Hasura-User-Id
  
  # Admins can update any SOS event
  - role: admin
    permission:
      columns:
        - user_id
        - emergency_type
        - status
        - location
        - location_address
        - location_description
        - responding_facility_id
        - ambulance_dispatched
        - assigned_ambulance_id
        - description
        - responding_user_id
      filter: {}
      check: {}

delete_permissions:
  # Only admins can delete SOS events (for data integrity)
  - role: admin
    permission:
      filter: {}
configuration:
  column_config:
    ambulance_dispatched:
      custom_name: ambulanceDispatched
    created_at:
      custom_name: createdAt
    emergency_type:
      custom_name: emergencyType
    for_self:
      custom_name: forSelf
    location_address:
      custom_name: locationAddress
    location_description:
      custom_name: locationDescription
    responding_facility_id:
      custom_name: respondingFacilityId
    responding_user_id:
      custom_name: respondingUserId
    updated_at:
      custom_name: updatedAt
    user_id:
      custom_name: userId
  custom_column_names:
    ambulance_dispatched: ambulanceDispatched
    created_at: createdAt
    emergency_type: emergencyType
    for_self: forSelf
    location_address: locationAddress
    location_description: locationDescription
    responding_facility_id: respondingFacilityId
    responding_user_id: respondingUserId
    updated_at: updatedAt
    user_id: userId
  custom_name: SosEvent
  custom_root_fields:
    delete: deleteSosEvents
    delete_by_pk: deleteSosEvent
    insert: insertSosEvents
    insert_one: insertSosEvent
    select: sosEvents
    select_aggregate: sosEventsAggregate
    select_by_pk: sosEventById
    update: updateSosEvents
    update_by_pk: updateSosEvent
object_relationships:
  - name: respondingFacility
    using:
      foreign_key_constraint_on: responding_facility_id
  - name: respondingUser
    using:
      foreign_key_constraint_on: responding_user_id
  - name: user
    using:
      foreign_key_constraint_on: user_id
array_relationships:
  - name: sosEscalations
    using:
      foreign_key_constraint_on:
        column: sos_event_id
        table:
          name: sos_escalations
          schema: public

# Role-based permissions for SOS Events table
# Security is critical as this contains emergency and location data

# Select permissions - who can view SOS events
select_permissions:
  # Mothers can see their own SOS events only
  - role: mother
    permission:
      columns:
        - id
        - created_at
        - updated_at
        - user_id
        - emergency_type
        - description
        - status
        - for_self
        - location
        - location_address
        - location_description
        - responding_facility_id
        - responding_user_id
        - ambulance_dispatched
        - notes
      filter:
        user_id:
          _eq: X-Hasura-User-Id
      allow_aggregations: false

  # CHWs can see SOS events for their assigned mothers
  - role: chw
    permission:
      columns:
        - id
        - created_at
        - updated_at
        - user_id
        - emergency_type
        - description
        - status
        - for_self
        - location
        - location_address
        - location_description
        - responding_facility_id
        - responding_user_id
        - ambulance_dispatched
        - notes
      filter:
        _or:
          - user:
              children:
                chw_id:
                  _eq: X-Hasura-User-Id
          - responding_user_id:
              _eq: X-Hasura-User-Id
      allow_aggregations: true

  # Clinicians can see SOS events for their facility
  - role: clinician
    permission:
      columns:
        - id
        - created_at
        - updated_at
        - user_id
        - emergency_type
        - description
        - status
        - for_self
        - location
        - location_address
        - location_description
        - responding_facility_id
        - responding_user_id
        - ambulance_dispatched
        - notes
      filter:
        _or:
          - responding_facility_id:
              _eq: X-Hasura-Facility-Id
          - responding_user_id:
              _eq: X-Hasura-User-Id
          - user:
              facility_id:
                _eq: X-Hasura-Facility-Id
      allow_aggregations: true

  # Admins can see all SOS events
  - role: admin
    permission:
      columns:
        - id
        - created_at
        - updated_at
        - user_id
        - emergency_type
        - description
        - status
        - for_self
        - location
        - location_address
        - location_description
        - responding_facility_id
        - responding_user_id
        - ambulance_dispatched
        - notes
      filter: {}
      allow_aggregations: true

# Insert permissions - who can create SOS events
insert_permissions:
  # All authenticated users can create SOS events (emergency situations)
  - role: user
    permission:
      columns:
        - emergency_type
        - description
        - for_self
        - location
        - location_address
        - location_description
      check: {}
      set:
        user_id: X-Hasura-User-Id
        status: "OPEN"
  
  # Mothers can create SOS events with status open
  - role: mother
    permission:
      columns:
        - emergency_type
        - description
        - for_self
        - location
        - location_address
        - location_description
      check: {}
      set:
        user_id: X-Hasura-User-Id
        status: "OPEN"

  # CHWs can create SOS events on behalf of mothers
  - role: chw
    permission:
      columns:
        - emergency_type
        - description
        - for_self
        - location
        - location_address
        - location_description
        - user_id
      check:
        _or:
          - user_id:
              _eq: X-Hasura-User-Id
          - user:
              children:
                chw_id:
                  _eq: X-Hasura-User-Id
      set:
        status: "OPEN"

  # Clinicians can create SOS events with more details
  - role: clinician
    permission:
      columns:
        - emergency_type
        - description
        - for_self
        - location
        - location_address
        - location_description
        - user_id
        - notes
      check: {}
      set:
        status: "OPEN"

# Update permissions - who can modify SOS events (important for emergency response)
update_permissions:
  # CHWs can update limited fields for events they're responding to
  - role: chw
    permission:
      columns:
        - status
        - notes
      filter:
        _or:
          - responding_user_id:
              _eq: X-Hasura-User-Id
          - user:
              children:
                chw_id:
                  _eq: X-Hasura-User-Id
      check:
        status:
          _in: ["OPEN", "IN_PROGRESS", "CLOSED"]
      set:
        responding_user_id: X-Hasura-User-Id

  # Clinicians can update more fields, including ambulance dispatch
  - role: clinician
    permission:
      columns:
        - status
        - responding_facility_id
        - ambulance_dispatched
        - notes
      filter:
        _or:
          - responding_facility_id:
              _eq: X-Hasura-Facility-Id
          - responding_user_id:
              _eq: X-Hasura-User-Id
      check:
        status:
          _in: ["OPEN", "IN_PROGRESS", "CLOSED"]
      set:
        responding_user_id: X-Hasura-User-Id

  # Admins have full update capabilities
  - role: admin
    permission:
      columns:
        - emergency_type
        - description
        - status
        - for_self
        - location_address
        - location_description
        - responding_facility_id
        - responding_user_id
        - ambulance_dispatched
        - notes
      filter: {}
      check: null

# Delete permissions - only admins can delete, and only for record keeping purposes
delete_permissions:
  - role: admin
    permission:
      filter: {}
      backend_only: true
